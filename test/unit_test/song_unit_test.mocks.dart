// Mocks generated by Mockito 5.4.4 from annotations
// in sangeet/test/unit_test/song_unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sangeet/core/failure/failure.dart' as _i6;
import 'package:sangeet/features/song/domain/entity/song_entity.dart' as _i7;
import 'package:sangeet/features/song/domain/repository/song_repository.dart'
    as _i2;
import 'package:sangeet/features/song/domain/usecases/song_usecase.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeISongRepository_0 extends _i1.SmartFake
    implements _i2.ISongRepository {
  _FakeISongRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SongUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSongUseCase extends _i1.Mock implements _i4.SongUseCase {
  @override
  _i2.ISongRepository get songRepository => (super.noSuchMethod(
        Invocation.getter(#songRepository),
        returnValue: _FakeISongRepository_0(
          this,
          Invocation.getter(#songRepository),
        ),
        returnValueForMissingStub: _FakeISongRepository_0(
          this,
          Invocation.getter(#songRepository),
        ),
      ) as _i2.ISongRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>> getAllSongs(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSongs,
          [page],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getAllSongs,
            [page],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getAllSongs,
            [page],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>> getTrendingSongs(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTrendingSongs,
          [page],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getTrendingSongs,
            [page],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getTrendingSongs,
            [page],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>> getPopularSongs(
          int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularSongs,
          [page],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getPopularSongs,
            [page],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getPopularSongs,
            [page],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>> searchAllSongs(
    int? page,
    String? keyword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchAllSongs,
          [
            page,
            keyword,
          ],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #searchAllSongs,
            [
              page,
              keyword,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #searchAllSongs,
            [
              page,
              keyword,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>> getSongsByArtist(
    int? page,
    String? keyword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSongsByArtist,
          [
            page,
            keyword,
          ],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getSongsByArtist,
            [
              page,
              keyword,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getSongsByArtist,
            [
              page,
              keyword,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>> getSongsByGenre(
    int? page,
    String? keyword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSongsByGenre,
          [
            page,
            keyword,
          ],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getSongsByGenre,
            [
              page,
              keyword,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.SongEntity>>(
          this,
          Invocation.method(
            #getSongsByGenre,
            [
              page,
              keyword,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.SongEntity>>>);
}
